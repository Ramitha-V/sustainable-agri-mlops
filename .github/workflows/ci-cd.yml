name: Build, Train, and Deploy Sustainable Agriculture Predictor

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Job 1: Build and Test the Environment
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Set up Python'
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: 'Install Dependencies'
      run: |
        pip install -r requirements.txt
    
    # You can add unit tests here in the future
    # - name: 'Run Pytest (Optional)'
    #   run: |
    #     pip install pytest
    #     pytest

  # Job 2: Run the DVC Training Pipeline
  train:
    runs-on: ubuntu-latest
    needs: build # This job will only run if the 'build' job succeeds
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Set up Python'
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: 'Install Dependencies'
      run: |
        pip install -r requirements.txt

    - name: 'Authenticate and Pull DVC Data'
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      run: |
        dvc pull -v

    - name: 'Reproduce DVC Pipeline'
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      run: |
        dvc repro -f # Use -f to force re-running the training

    - name: 'Push Trained Model to DVC Remote'
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      run: |
        dvc push


  # Job 3: Build Docker Image and Deploy to Azure
  deploy:
    runs-on: ubuntu-latest
    needs: train # This job will only run if the 'train' job succeeds
    environment: production

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Login to Azure Container Registry'
      run: |
        az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}

    - name: 'Build and Push Docker Image'
      run: |
        docker build . -t ${{ secrets.ACR_LOGIN_SERVER }}/agri-yield-predictor:latest \
          --build-arg AZURE_STORAGE_CONNECTION_STRING='${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}'
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/agri-yield-predictor:latest

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEB_APP_NAME }}
        images: '${{ secrets.ACR_LOGIN_SERVER }}/agri-yield-predictor:latest'

    - name: 'Logout from Azure'
      run: |
        az logout
